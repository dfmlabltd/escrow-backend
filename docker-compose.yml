version: "3.7"

services:
  django:
    build: .
    container_name: django
    restart: on-failure:5
    env_file:
      - ./escrow/.env
    ports:
      - "8000:8000"
    volumes:
      - ./:/usr/src/app
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn --workers=2 --bind=0.0.0.0:8000 escrow.wsgi:application"
    depends_on:
      - database
      - redis
  celery:
    container_name: celery
    restart: on-failure:5
    env_file:
      - ./escrow/.env
    build: ./
    command: celery -A escrow worker -l  info
    volumes:
      - ./:/usr/src/app/
  celery_heartbeat:
    container_name: celery_heartbeat
    restart: on-failure:5
    env_file:
      - ./escrow/.env
    build: ./
    command: celery -A escrow beat -l  info
    depends_on:
      - celery
    volumes:
      - ./:/usr/src/app/
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/logs:/etc/nginx/logs
      - ./config/nginx/others:/etc/nginx/others
      - ./config/nginx/security:/etc/nginx/security
      - ./staticfiles:/staticfiles
    depends_on:
      - django
  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
  database:
    image: "postgres" # use latest official postgres version
    env_file:
      - ./escrow/.env
    volumes:
      - database_data:/var/lib/postgresql/data/
volumes:
  redis_volume:
  database_data: